import csv
import random

class Name:
    def __init__(self, name):
        self.name = name
    def __repr__(self):
        return self.name

def chunkify(lst,n):
    return [lst[i::n] for i in range(n)]

layouts = [ (Name("Neo"), ["uiaenrtd", "lchg", "fv", "qjwk", "os", "pbm", "xyz", "äöüß"])
          , (Name("NeoQwertz"), ["asdfjkl", "ruie", "qwop", "tz", "gh", "vn", "cm", "cb", "xyz", "äöüß"])
          , (Name("Bone"), ["ctienrsg", "ua", "hl", "dj", "mw", "qp", "ob", "fvk", "xyz", "öäüß"])
          , (Name("AdNW"), ["hieatrns", "gc", "lu", "jf", "kvp", "od", "bw", "mq", "xyz", "äöüß"])
          , (Name("KOY"), ["haeitrns", "gc","ok", "dl", "fwm", "jv", "pb", "qu", "xyz", "äüöß"])
          , (Name("NeoQwerty"), ["asdfjkl", "ruie", "qwop", "tz", "gh", "vn", "cm", "cb", "xyz", "äöüß"])
          , (Name("Vou"), ["caeitrns", "ulho", "fjv", "qg", "bp", "dw", "mk", "xyz", "öäüß"])
          , (Name("Mine"), ["crientsh", "ua","bd", "lj", "gy", "qw", "om", "vf", "pk", "xyz", "öäüß"])
          , (Name("Noted"), ["csietnrh", "ua","bm", "yz", "lf", "qp", "od", "vg", "wk", "xyz", "öäüß"])
          ]


words = []
with open('freq_dict_german.csv', newline='') as csvfile:
    reader = csv.reader(csvfile, delimiter=' ', quotechar='|')
    words.extend([row[0] for row in reader])

with open('dict_german.csv', newline='') as csvfile:
    reader = csv.reader(csvfile, delimiter=' ', quotechar='|')
    words.extend([row[0] for row in reader])

words = set(words)

print('module Generated.Layouts exposing (..)')
print('{-| This file was generated by convert.py -}')
print('import Types exposing (Layout(..))')

layRes = []
for name,layout in layouts:
    chars = []
    tuples = []
    for i,must in enumerate([[* string] for string in layout]):
        chars.extend(must)

        result = []
        for word in words:
            for char in [*word]:
                if char not in chars:
                    break
            else:
                for item in must:
                    if item in [*word]:
                        result.append(word)
                        break

        result = [x for x in result if len(x) > 6]
        result.sort(key=len)
        result = result[:100]
        random.shuffle(result)

        results = chunkify(result, 10)
        for i,result in enumerate(results):
            tuples.append((i, ''.join(must), result))

        
    assert set(chars) == set([*"abcdefghijklmnopqrstuvwxyzßäöü"]), ("".join(sorted(chars)),name)

    layRes.append((name, tuples))

data = str(layRes).replace('\'', '\"')
print(f'data = {data}')
